apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "coding-challenge-app.fullname" . }}
  labels:
{{ include "coding-challenge-app.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "coding-challenge-app.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "coding-challenge-app.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: RAILS_ENV
              value: {{ .Values.railsEnv | quote }}
            {{- if .Values.postgresql.postgresUser }}
            - name: DSBPA_TEST_USER
              value: {{ .Values.postgresql.postgresUser | quote }}
            {{- end }}
            - name: DSBPA_TEST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{- if .Values.postgresql.postgresPasswordSecret }} {{ .Values.postgresql.postgresPasswordSecret }} {{- else }} {{ template "postgresql.fullname" .}} {{- end }}
                  key: postgres-password
            - name: DATABASE_HOST
              value: {{ template "postgresql.fullname" .}}
            - name: DATABASE_PORT
              value: "5432"
          livenessProbe:
            httpGet:
              path: /dsbpa
              port: http
          readinessProbe:
            httpGet:
              path: /dsbpa
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: RAILS_ENV
              value: {{ .Values.railsEnv | quote }}
            {{- if .Values.postgresql.postgresUser }}
            - name: DSBPA_TEST_USER
              value: {{ .Values.postgresql.postgresUser | quote }}
            {{- end }}
            - name: DSBPA_TEST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{- if .Values.postgresql.postgresPasswordSecret }} {{ .Values.postgresql.postgresPasswordSecret }} {{- else }} {{ template "postgresql.fullname" .}} {{- end }}
                  key: postgres-password
            - name: DATABASE_HOST
              value: {{ template "postgresql.fullname" .}}
            - name: DATABASE_PORT
              value: "5432"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
